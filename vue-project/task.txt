1. Створіть реактивний об'єкт і виведіть його властивості в шаблон. Змініть властивість об'єкта і спостерігайте за змінами в DOM.
--Когда в компоненте возвращается объект из data(), то под капотом он уже становится реактивным с помощью reactive()

2. Створіть метод, який буде викликатися при кліку на кнопку і змінювати деякі дані в інстансі
3. Створіть метод, який приймає подію і використовує ії для зміни даних інстанса.
4. Створіть метод для фільтрації масиву об'єктів за деяким критерієм.
5. Використайте метод для обробки події кліку, який змінює стан інших компонентів.
6. Створіть метод, який буде перевіряти введені дані у формі на відповідність деяким правилам.
7. Створіть обчислювальну властивість для виведення даних, обчислених на основі інших реактивних даних.
8. Створіть computed property для фільтрації списку об'єктів.
9. Створіть computed property, яке комбінує дані відповіді від HTTP запиту та з рекативною змінною.
10. Створіть кілька computed properties, які залежать одне від одного.
11. Використовуйте watcher для відстеження змін у реактивному об’єкті та виведення повідомлення про це.
12. Використовуйте watcher для відстеження змін однієї властивості у реактивному об’єкті та виведення повідомлення про це.
13. Використовуйте watcher для відправлення API запитів при зміні реактивних даних.
14. Створіть watcher, який реагує на зміни в computed property.
15. Використовуйте deep опцію для відстеження властивостей внутрішніх об’єктів.
16. Використовуйте опцію immediate для виклику watcher при ініціалізації компонента.